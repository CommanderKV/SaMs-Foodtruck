/api/v1/carts/{id}:
  get:
    summary: Get a cart by ID
    tags: [Carts]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the cart
    responses:
      200:
        description: Cart retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  description: Status of the response
                  type: string
                  value: "success"
                data:
                  description: Cart details
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID of the cart
                    orderTotal:
                      type: number
                      format: float
                      description: Total order amount
                    productOrders:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID of the product order
                          price:
                            type: number
                            format: float
                            description: Price of the product order
                          quantity:
                            type: integer
                            description: Quantity of the product order
                          customizations:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID of the customization
                                quantity:
                                  type: integer
                                  description: Quantity of the customization
                                price:
                                  type: number
                                  format: float
                                  description: Price of the customization
                                ingredient:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: ID of the ingredient
                                    name:
                                      type: string
                                      description: Name of the ingredient
                          product:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: ID of the product
                              name:
                                type: string
                                description: Name of the product
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          description: UUID of the user
                        name:
                          type: string
                          description: Name of the user
            example:
              status: success
              data:
                id: 1
                orderTotal: 150.0
                productOrders:
                  - id: 1
                    price: 50.0
                    quantity: 2
                    customizations:
                      - id: 1
                        quantity: 1
                        price: 5.0
                        ingredient:
                          id: 1
                          name: "Test ingredient"
                    product:
                      id: 1
                      name: "Test product"
                user:
                  id: "620FF0a7-87f5...."
                  name: "John Doe"
      404:
        description: Cart not found
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              notFound:
                value:
                  status: failure
                  message: Cart not found
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              serverError:
                value:
                  status: failure
                  message: Internal server error

/api/v1/carts/create:
  post:
    summary: Create a new cart
    tags: [Carts]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              orderTotal:
                type: number
                format: float
                description: Total order amount
              userId:
                type: string
                description: ID of the user
            required:
              - orderTotal
              - userId
    responses:
      201:
        description: Cart created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  description: Status of the response
                  type: string
                  value: "success"
                data:
                  description: Cart details
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID of the cart
                    orderTotal:
                      type: number
                      format: float
                      description: Total order amount
                    productOrders:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID of the product order
                          price:
                            type: number
                            format: float
                            description: Price of the product order
                          quantity:
                            type: integer
                            description: Quantity of the product order
                          customizations:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID of the customization
                                quantity:
                                  type: integer
                                  description: Quantity of the customization
                                price:
                                  type: number
                                  format: float
                                  description: Price of the customization
                                ingredient:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: ID of the ingredient
                                    name:
                                      type: string
                                      description: Name of the ingredient
                          product:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: ID of the product
                              name:
                                type: string
                                description: Name of the product
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          description: UUID of the user
                        name:
                          type: string
                          description: Name of the user
            example:
              status: success
              data:
                id: 1
                orderTotal: 150.0
                productOrders:
                  - id: 1
                    price: 50.0
                    quantity: 2
                    customizations:
                      - id: 1
                        quantity: 1
                        price: 5.0
                        ingredient:
                          id: 1
                          name: "Test ingredient"
                    product:
                      id: 1
                      name: "Test product"
                user:
                  id: "620FF0a7-87f5...."
                  name: "John Doe"
      400:
        description: Invalid input
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              invalidInput:
                value:
                  status: failure
                  message: Invalid input
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              serverError:
                value:
                  status: failure
                  message: Internal server error

/api/v1/carts/update/{id}:
  put:
    summary: Update a cart by ID
    tags: [Carts]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the cart
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              orderTotal:
                type: number
                format: float
              userId:
                type: string
    responses:
      200:
        description: Cart updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                data:
                  type: object
            example:
              status: success
              data:
                message: cart updated
      404:
        description: Cart not found
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              status: failure
              message: Cart not found
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              status: failure
              message: Internal server error

/api/v1/carts/delete/{id}:
  delete:
    summary: Delete a cart by ID
    tags: [Carts]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the cart
    responses:
      200:
        description: Cart deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                data:
                  type: object
            example:
              status: success
              data:
                message: Cart deleted
      404:
        description: Cart not found
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              status: failure
              message: Cart not found
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              status: failure
              message: Internal server error

/api/v1/carts/{id}/products:
  post:
    summary: Add a product to a cart
    tags: [Carts]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the cart
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              productOrderId:
                type: integer
                description: ID of the product order
    responses:
      201:
        description: Product added to cart successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  description: Status of the response
                  type: string
                data:
                  description: Product order details
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID of the cart
                    quantity:
                      type: integer
                      description: Quantity of the product order
                    price:
                      type: number
                      format: float
                      description: Price of the product order
                    productId:
                      type: integer
                      description: ID of the product
            example:
              status: success
              data:
                id: 10
                quantity: 2
                price: 50.0
                productId: 1
      404:
        description: Cart or product not found
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              status: failure
              message: Cart or product not found
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              status: failure
              message: Internal server error

/api/v1/carts/{id}/products/{productOrderId}:
  delete:
    summary: Remove a product from a cart
    tags: [Carts]
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID of the cart
      - in: path
        name: productOrderId
        required: true
        schema:
          type: integer
        description: ID of the product order
    responses:
      200:
        description: Product removed from cart successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                data:
                  type: object
            example:
              status: success
              data:
                message: Product removed from cart
      404:
        description: Cart or product not found
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              status: failure
              message: Cart or product not found
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                message:
                  type: string
            example:
              status: failure
              message: Internal server error
